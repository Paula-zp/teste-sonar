name: Build and Analyze with SonarQube

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:latest
        options: --health-cmd="curl --silent --fail http://localhost:9000/api/system/health" --health-timeout=90s --health-retries=3
        ports:
          - 9000:9000
        # Defina uma variável de ambiente se necessário (como banco de dados do SonarQube)
        env:
          SONARQUBE_JDBC_URL: jdbc:postgresql://localhost:5432/sonar
          SONARQUBE_JDBC_USERNAME: sonar
          SONARQUBE_JDBC_PASSWORD: sonar

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis relevance

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to start..."
          curl --silent --fail http://localhost:9000

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://localhost:9000  # URL do SonarQube local
          
      # (Opcional) Para falhar o job caso a Quality Gate do SonarQube esteja vermelha:
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
